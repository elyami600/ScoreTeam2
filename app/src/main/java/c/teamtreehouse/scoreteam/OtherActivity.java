package c.teamtreehouse.scoreteam;import android.Manifest;import android.content.Intent;import android.content.pm.PackageManager;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.provider.Telephony;import android.support.annotation.NonNull;import android.support.v4.app.ActivityCompat;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;public class OtherActivity extends AppCompatActivity {    public static final String TAG = "OtherActivity";    public static final int REQUEST_CALL_PHONE = 1;    public static final int REQUEST_SEND_MSJ= 2;    private EditText etWeb;    private EditText editNumberCall;    private Button callButton;    //private EditText editTextMessage;    //String strScoreCount = intent.getExtras().get(MainActivity.KEY_SCORE).toString();   // String strWinnerTeam = intent.getExtras().get(MainActivity.WINNER_TEAM).toString();    private String winnerTeam=" ";    private String won = " ";    private String messageOut= " ";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_other);        etWeb      = (EditText)findViewById(R.id.editTextWeb);        callButton = (Button)findViewById(R.id.buttonDial);        callButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                callJenny();            }        });        editNumberCall  = (EditText)findViewById(R.id.editNumberCall);        Intent intent = getIntent();        intent.getExtras();        winnerTeam = intent.getStringExtra(secondActivity.winner);        won = intent.getStringExtra(secondActivity.strWinnerTeam);        Log.d(TAG, winnerTeam);        messageOut= winnerTeam + " won by " + won;    }    public void goToWeb(View view) {        Log.d(TAG, "inside goToWeb method");        String url = etWeb.getText().toString();        Uri webAddress = Uri.parse("http://" + url);        Intent intent = new Intent(Intent.ACTION_VIEW, webAddress);        if (intent.resolveActivity(getPackageManager()) != null) {            startActivity(intent);        } else {            Log.d(TAG, "cannot goToWeb ");            Toast.makeText(this, "cannot go to web", Toast.LENGTH_LONG).show();        }    }    public void goToLocation(View view) {        Log.d(TAG, "inside of goToLocation method");        Uri areaNearMe = Uri.parse("https://www.google.com/maps/search/basketball+near+me+bronx+ny/@40.8757596,-73.9035843,14z/data=!3m1!4b1");        Intent intent = new Intent(Intent.ACTION_VIEW,areaNearMe);        if(intent.resolveActivity(getPackageManager()) != null){            startActivity(intent);        } else {            Log.d(TAG, "cannot  goToLocation ");        }    }//------------------------------------------------------------------------------------------------------------------------------------    public void shareText(View view) {        Log.d(TAG, "inside of shareText method");        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) // At least KitKat        {            String defaultSmsPackageName = Telephony.Sms.getDefaultSmsPackage(this); // Need to change the build to API 19            Intent sendIntent = new Intent(Intent.ACTION_SEND);            sendIntent.setType("text/plain");            sendIntent.putExtra(Intent.EXTRA_TEXT, messageOut);            if (defaultSmsPackageName != null)// Can be null in case that there is no default, then the user would be able to choose            // any app that support this intent.            {                sendIntent.setPackage(defaultSmsPackageName);            }            startActivity(sendIntent);        }        else // For early versions, do what worked for you before.        {            Intent smsIntent = new Intent(android.content.Intent.ACTION_VIEW);            smsIntent.setType("vnd.android-dir/mms-sms");            smsIntent.putExtra("address","phoneNumber");//            smsIntent.putExtra("sms_body","message");            startActivity(smsIntent);        }    }      /*  Intent shareSendTextIntent = new Intent(Intent.ACTION_VIEW);        shareSendTextIntent.putExtra(won, messageOut);        shareSendTextIntent.setType("vnd.android-dir/mms-sms");        startActivity(shareSendTextIntent);*///------------------------------------------------------------------------------------------------------------------------------------    public void callJenny() {        Log.d(TAG, "inside of callJenny method");        Intent intent = new Intent(Intent.ACTION_CALL);        String telNumber = editNumberCall.getText().toString();        intent.setData(Uri.parse("tel:" + telNumber));        if (intent.resolveActivity(getPackageManager()) != null) {            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {                // TODO: Consider calling                //    ActivityCompat#requestPermissions                ActivityCompat.requestPermissions(this, new String[]{                        Manifest.permission.CALL_PHONE}, REQUEST_CALL_PHONE );                // here to request the missing permissions, and then overriding                //   public void onRequestPermissionsResult(int requestCode, String[] permissions,                //                                          int[] grantResults)                // to handle the case where the user grants the permission. See the documentation                // for ActivityCompat#requestPermissions for more details.            }            else {                startActivity(intent);            }        }        else{            Log.d(TAG, "this calls cannot be connected");        }    }    @Override    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {        super.onRequestPermissionsResult(requestCode, permissions, grantResults);        Log.d(TAG, "inside onRequestPermissionsResult");        switch (requestCode){            case REQUEST_CALL_PHONE:{                if((grantResults.length > 0) &&                        (grantResults[0] == PackageManager.PERMISSION_GRANTED)){                    callJenny();                }            }        }    }}